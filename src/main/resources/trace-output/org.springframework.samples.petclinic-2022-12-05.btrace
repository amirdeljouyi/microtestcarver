### BTrace Log: 05/12/2022, 14:06

org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class [Ljava.lang.Object; elementData=[Ljava.lang.Object;@181ca8c5, int size=0, int modCount=0, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class [Ljava.lang.Object; elementData=[Ljava.lang.Object;@181ca8c5, int size=0, int modCount=0, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class [Ljava.lang.Object; elementData=[Ljava.lang.Object;@181ca8c5, int size=0, int modCount=0, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.model.Person.setLastName:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "",
    fields: [],
}, ]

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class [Ljava.lang.Object; elementData=[Ljava.lang.Object;@181ca8c5, int size=0, int modCount=0, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class [Ljava.lang.Object; elementData=[Ljava.lang.Object;@181ca8c5, int size=0, int modCount=0, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class [Ljava.lang.Object; elementData=[Ljava.lang.Object;@181ca8c5, int size=0, int modCount=0, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@7db4222a, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@7db4222a, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@75b1362d, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[Leo]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@75b1362d, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "638 Cardinal Ave.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Sun Prairie",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551749",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Basil],
    fields: [interface java.util.List bag=[Basil], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@7c57f490, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=2, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Basil], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Betty",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Davis",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Betty",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "638 Cardinal Ave.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Sun Prairie",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551749",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Basil],
    fields: [interface java.util.List bag=[Basil], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@7c57f490, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=2, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Basil], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Betty",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Davis",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Davis",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2012-08-06,
    fields: [int year=2012, short month=8, short day=6, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: hamster,
    fields: [class java.lang.String name=hamster, class java.lang.Integer id=6, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@7c44de35, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=2, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Basil",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[Basil]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2012-08-06,
    fields: [int year=2012, short month=8, short day=6, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: hamster,
    fields: [class java.lang.String name=hamster, class java.lang.Integer id=6, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@7c44de35, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=2, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Basil",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Basil",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Basil",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "2693 Commerce St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "McFarland",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085558763",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Jewel, Rosy],
    fields: [interface java.util.List bag=[Jewel, Rosy], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@33cdc920, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=3, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Jewel, Rosy], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Eduardo",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Rodriquez",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 3,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Eduardo",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "2693 Commerce St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "McFarland",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085558763",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Jewel, Rosy],
    fields: [interface java.util.List bag=[Jewel, Rosy], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@33cdc920, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=3, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Jewel, Rosy], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Eduardo",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Rodriquez",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 3,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Rodriquez",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-03-07,
    fields: [int year=2010, short month=3, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@19dfda11, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=4, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Jewel",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 4,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[Jewel]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-03-07,
    fields: [int year=2010, short month=3, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@19dfda11, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=4, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Jewel",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 4,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Jewel",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Jewel",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2011-04-17,
    fields: [int year=2011, short month=4, short day=17, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@1cd6c454, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=3, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Rosy",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 3,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[Rosy]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2011-04-17,
    fields: [int year=2011, short month=4, short day=17, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@1cd6c454, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=3, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Rosy",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 3,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Rosy",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Rosy",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "563 Friendly St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Windsor",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085553198",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Iggy],
    fields: [interface java.util.List bag=[Iggy], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@2c7391e, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=4, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Iggy], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Harold",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Davis",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 4,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Harold",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "563 Friendly St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Windsor",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085553198",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Iggy],
    fields: [interface java.util.List bag=[Iggy], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@2c7391e, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=4, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Iggy], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Harold",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Davis",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 4,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Davis",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-30,
    fields: [int year=2010, short month=11, short day=30, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: lizard,
    fields: [class java.lang.String name=lizard, class java.lang.Integer id=3, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@483cfbab, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=5, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Iggy",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[Iggy]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-30,
    fields: [int year=2010, short month=11, short day=30, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: lizard,
    fields: [class java.lang.String name=lizard, class java.lang.Integer id=3, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@483cfbab, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=5, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Iggy",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Iggy",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Iggy",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "2387 S. Fair Way",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085552765",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [George],
    fields: [interface java.util.List bag=[George], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@5e3efe1e, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=5, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[George], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Peter",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "McTavish",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Peter",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "2387 S. Fair Way",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085552765",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [George],
    fields: [interface java.util.List bag=[George], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@5e3efe1e, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=5, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[George], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Peter",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "McTavish",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "McTavish",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-01-20,
    fields: [int year=2010, short month=1, short day=20, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: snake,
    fields: [class java.lang.String name=snake, class java.lang.Integer id=4, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@52b3aa9d, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=6, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 6,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[George]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-01-20,
    fields: [int year=2010, short month=1, short day=20, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: snake,
    fields: [class java.lang.String name=snake, class java.lang.Integer id=4, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@a38f3fe, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@52b3aa9d, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=6, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 6,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@4f5d5d33, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@3ab2421c, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@4f5d5d33, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@3ab2421c, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@4f5d5d33, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@12e955fe, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getBirthDate:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@4f5d5d33, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@12e955fe, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@4f5d5d33, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@12e955fe, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[cat]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getVisits:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@4f5d5d33, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@12e955fe, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.hibernate.collection.internal.PersistentSet,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@4f5d5d33, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@12e955fe, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@76d191dd, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@7b332387, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@76d191dd, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@7b332387, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@76d191dd, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@7b332387, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@76d191dd, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@7b332387, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@76d191dd, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@7b332387, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@76d191dd, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@7b332387, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@76d191dd, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@7b332387, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@76d191dd, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@7b332387, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@23ec9e70, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@72484c6a, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.setFirstName:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Georgia",
    fields: [],
}, ]

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@23ec9e70, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@72484c6a, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "George",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@23ec9e70, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@72484c6a, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Georgia",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.setLastName:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, ]

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@23ec9e70, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@72484c6a, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Georgia",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7ac12160, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@2a8f5317, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Georgia",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Georgia",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo],
    fields: [interface java.util.List bag=[Leo], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7ac12160, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@2a8f5317, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Georgia",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7ac12160, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@76aaeda8, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getBirthDate:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7ac12160, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@76aaeda8, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7ac12160, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@76aaeda8, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[cat]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getVisits:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7ac12160, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@76aaeda8, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.hibernate.collection.internal.PersistentSet,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7ac12160, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@76aaeda8, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo, null],
    fields: [interface java.util.List bag=[Leo, null], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7d758f3d, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@44253797, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=true, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Georgia",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Georgia",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo, null],
    fields: [interface java.util.List bag=[Leo, null], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7d758f3d, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@44253797, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=true, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Georgia",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getBirthDate:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getBirthDate:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getBirthDate:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getBirthDate:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[bird]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[bird]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

virtual org.springframework.samples.petclinic.owner.PetType org.springframework.samples.petclinic.owner.PetTypeFormatter#parse(java.lang.String, java.util.Locale)[org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetTypeFormatter,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f,
    fields: [interface org.springframework.samples.petclinic.owner.OwnerRepository owners=com.sun.proxy.$Proxy144@7425582e, ],
}, ]

org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

interface java.util.List org.springframework.samples.petclinic.owner.OwnerRepository#findPetTypes[org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4]
Args: []

interface java.util.Iterator java.util.Collection#iterator[[bird, cat, dog, hamster, lizard, snake]]
Args: []

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@5366f8d9]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@5366f8d9]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[bird]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[bird]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, ]

Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: bird,
    fields: [class java.lang.String name=bird, class java.lang.Integer id=5, ],
}

}:
Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: bird,
    fields: [class java.lang.String name=bird, class java.lang.Integer id=5, ],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[cat]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[cat]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

virtual org.springframework.samples.petclinic.owner.PetType org.springframework.samples.petclinic.owner.PetTypeFormatter#parse(java.lang.String, java.util.Locale)[org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetTypeFormatter,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f,
    fields: [interface org.springframework.samples.petclinic.owner.OwnerRepository owners=com.sun.proxy.$Proxy144@7425582e, ],
}, ]

org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

interface java.util.List org.springframework.samples.petclinic.owner.OwnerRepository#findPetTypes[org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4]
Args: []

interface java.util.Iterator java.util.Collection#iterator[[bird, cat, dog, hamster, lizard, snake]]
Args: []

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@612fea72]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@612fea72]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[bird]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[bird]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@612fea72]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@612fea72]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[cat]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[cat]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, ]


Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}

}:
Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[dog]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[dog]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

virtual org.springframework.samples.petclinic.owner.PetType org.springframework.samples.petclinic.owner.PetTypeFormatter#parse(java.lang.String, java.util.Locale)[org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetTypeFormatter,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f,
    fields: [interface org.springframework.samples.petclinic.owner.OwnerRepository owners=com.sun.proxy.$Proxy144@7425582e, ],
}, ]

org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

interface java.util.List org.springframework.samples.petclinic.owner.OwnerRepository#findPetTypes[org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4]
Args: []

interface java.util.Iterator java.util.Collection#iterator[[bird, cat, dog, hamster, lizard, snake]]
Args: []

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@2a0a78a0]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@2a0a78a0]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[bird]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[bird]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@2a0a78a0]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@2a0a78a0]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[cat]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[cat]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@2a0a78a0]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@2a0a78a0]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[dog]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[dog]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, ]

Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}

}:
Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 6,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[hamster]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 6,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 6,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[hamster]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 6,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

virtual org.springframework.samples.petclinic.owner.PetType org.springframework.samples.petclinic.owner.PetTypeFormatter#parse(java.lang.String, java.util.Locale)[org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetTypeFormatter,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f,
    fields: [interface org.springframework.samples.petclinic.owner.OwnerRepository owners=com.sun.proxy.$Proxy144@7425582e, ],
}, ]

org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

interface java.util.List org.springframework.samples.petclinic.owner.OwnerRepository#findPetTypes[org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4]
Args: []

interface java.util.Iterator java.util.Collection#iterator[[bird, cat, dog, hamster, lizard, snake]]
Args: []

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@2aa327d6]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@2aa327d6]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[bird]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[bird]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@2aa327d6]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@2aa327d6]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[cat]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[cat]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@2aa327d6]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@2aa327d6]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[dog]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[dog]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@2aa327d6]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@2aa327d6]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[hamster]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 6,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[hamster]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, ]

Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: hamster,
    fields: [class java.lang.String name=hamster, class java.lang.Integer id=6, ],
}

}:
Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: hamster,
    fields: [class java.lang.String name=hamster, class java.lang.Integer id=6, ],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 3,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[lizard]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 3,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 3,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[lizard]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 3,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

virtual org.springframework.samples.petclinic.owner.PetType org.springframework.samples.petclinic.owner.PetTypeFormatter#parse(java.lang.String, java.util.Locale)[org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetTypeFormatter,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f,
    fields: [interface org.springframework.samples.petclinic.owner.OwnerRepository owners=com.sun.proxy.$Proxy144@7425582e, ],
}, ]

org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

interface java.util.List org.springframework.samples.petclinic.owner.OwnerRepository#findPetTypes[org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4]
Args: []

interface java.util.Iterator java.util.Collection#iterator[[bird, cat, dog, hamster, lizard, snake]]
Args: []

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@66407ddb]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@66407ddb]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[bird]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[bird]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@66407ddb]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@66407ddb]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[cat]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[cat]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@66407ddb]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@66407ddb]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[dog]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[dog]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@66407ddb]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@66407ddb]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[hamster]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 6,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[hamster]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@66407ddb]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@66407ddb]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[lizard]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 3,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[lizard]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, ]

Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: lizard,
    fields: [class java.lang.String name=lizard, class java.lang.Integer id=3, ],
}

}:
Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: lizard,
    fields: [class java.lang.String name=lizard, class java.lang.Integer id=3, ],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 4,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[snake]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 4,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 4,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[snake]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 4,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

virtual org.springframework.samples.petclinic.owner.PetType org.springframework.samples.petclinic.owner.PetTypeFormatter#parse(java.lang.String, java.util.Locale)[org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetTypeFormatter,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f,
    fields: [interface org.springframework.samples.petclinic.owner.OwnerRepository owners=com.sun.proxy.$Proxy144@7425582e, ],
}, ]

org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

interface java.util.List org.springframework.samples.petclinic.owner.OwnerRepository#findPetTypes[org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4]
Args: []

interface java.util.Iterator java.util.Collection#iterator[[bird, cat, dog, hamster, lizard, snake]]
Args: []

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@5bc9f040]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@5bc9f040]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[bird]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[bird]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@5bc9f040]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@5bc9f040]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[cat]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[cat]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@5bc9f040]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@5bc9f040]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[dog]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[dog]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@5bc9f040]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@5bc9f040]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[hamster]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 6,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "hamster",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[hamster]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@5bc9f040]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@5bc9f040]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[lizard]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 3,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "lizard",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[lizard]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@5bc9f040]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@5bc9f040]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[snake]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 4,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[snake]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "snake",
    fields: [],
}, ]

Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: snake,
    fields: [class java.lang.String name=snake, class java.lang.Integer id=4, ],
}

}:
Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: snake,
    fields: [class java.lang.String name=snake, class java.lang.Integer id=4, ],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getBirthDate:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.Pet.setBirthDate:{
Args: [{
    name: null,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, ]

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.model.NamedEntity.setName:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}, ]

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: 

}:
org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

virtual org.springframework.samples.petclinic.owner.PetType org.springframework.samples.petclinic.owner.PetTypeFormatter#parse(java.lang.String, java.util.Locale)[org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetTypeFormatter,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.samples.petclinic.owner.PetTypeFormatter@2b31161f,
    fields: [interface org.springframework.samples.petclinic.owner.OwnerRepository owners=com.sun.proxy.$Proxy144@7425582e, ],
}, ]

org.springframework.samples.petclinic.owner.PetTypeFormatter.parse:{
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: null,
    type: java.util.Locale,
    isPrimitive: false,
    isInterface: true,
    object: en_US,
    fields: [class sun.util.locale.BaseLocale baseLocale=language=en, region=US, class sun.util.locale.LocaleExtensions localeExtensions=null, int hashCodeValue=96636889, class java.lang.String languageTag=en-US, ],
}, ]

Fields: [{
    name: owners,
    type: org.springframework.samples.petclinic.owner.OwnerRepository,
    isPrimitive: false,
    isInterface: true,
    object: org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4,
    fields: [interface java.lang.reflect.InvocationHandler h=org.springframework.aop.framework.JdkDynamicAopProxy@34b7c613, ],
}, ]

interface java.util.List org.springframework.samples.petclinic.owner.OwnerRepository#findPetTypes[org.springframework.data.jpa.repository.support.SimpleJpaRepository@791e32a4]
Args: []

interface java.util.Iterator java.util.Collection#iterator[[bird, cat, dog, hamster, lizard, snake]]
Args: []

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@337e4273]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@337e4273]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[bird]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 5,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "bird",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[bird]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@337e4273]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@337e4273]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[cat]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[cat]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, ]

Callback: 

interface boolean java.util.Iterator#hasNext[java.util.ArrayList$Itr@337e4273]
Args: []

interface java.lang.Object java.util.Iterator#next[java.util.ArrayList$Itr@337e4273]
Args: []

virtual java.lang.String org.springframework.samples.petclinic.owner.PetType#getName[dog]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}

}:
virtual boolean java.lang.String#equals(java.lang.Object)[dog]
Args: [{
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, ]

Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}

}:
Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}

}:
org.springframework.samples.petclinic.owner.Pet.setType:{
Args: [{
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, ]

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}

}:
org.springframework.samples.petclinic.owner.Pet.getBirthDate:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class java.util.HashMap map={}, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@60190207, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@3e6d5b46, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.<init>:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.<init>:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.PetType.<init>:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.openjdk.btrace.core.types.AnyType$1,
    isPrimitive: false,
    isInterface: true,
    object: org.openjdk.btrace.core.types.AnyType$1@64878905,
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getFirstName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo, Mike],
    fields: [interface java.util.List bag=[Leo, Mike], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7b318e9b, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@1f500661, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo, Mike], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Georgia",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Georgia",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.Person.getLastName:{
Args: []

Fields: [{
    name: address,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "110 W. Liberty St.",
    fields: [],
}, {
    name: city,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Madison",
    fields: [],
}, {
    name: telephone,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "6085551023",
    fields: [],
}, {
    name: pets,
    type: java.util.List<org.springframework.samples.petclinic.owner.Pet>,
    isPrimitive: false,
    isInterface: true,
    object: [Leo, Mike],
    fields: [interface java.util.List bag=[Leo, Mike], interface java.util.Collection providedCollection=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7b318e9b, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Owner@1f500661, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Owner.pets, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot=[Leo, Mike], class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: firstName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Georgia",
    fields: [],
}, {
    name: lastName,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Franklin",
    fields: [],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7b318e9b, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@183cfea4, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getBirthDate:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7b318e9b, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@183cfea4, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7b318e9b, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@183cfea4, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[cat]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "cat",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getVisits:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-09-07,
    fields: [int year=2010, short month=9, short day=7, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: cat,
    fields: [class java.lang.String name=cat, class java.lang.Integer id=1, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7b318e9b, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@183cfea4, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Leo",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 1,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.hibernate.collection.internal.PersistentSet,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7b318e9b, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@183cfea4, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=1, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7b318e9b, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@2e053e25, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=14, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 14,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getBirthDate:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7b318e9b, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@2e053e25, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=14, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 14,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}

}:
org.springframework.samples.petclinic.owner.Pet.getType:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7b318e9b, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@2e053e25, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=14, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 14,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}

}:
org.springframework.samples.petclinic.model.NamedEntity.toString:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

virtual java.lang.String org.springframework.samples.petclinic.model.NamedEntity#getName[dog]
Args: []

org.springframework.samples.petclinic.model.NamedEntity.getName:{
Args: []

Fields: [{
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 2,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}

}:
Return: {
    name: null,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "dog",
    fields: [],
}

}:
org.springframework.samples.petclinic.owner.Pet.getVisits:{
Args: []

Fields: [{
    name: birthDate,
    type: java.time.LocalDate,
    isPrimitive: false,
    isInterface: true,
    object: 2010-11-04,
    fields: [int year=2010, short month=11, short day=4, ],
}, {
    name: type,
    type: org.springframework.samples.petclinic.owner.PetType,
    isPrimitive: false,
    isInterface: true,
    object: dog,
    fields: [class java.lang.String name=dog, class java.lang.Integer id=2, ],
}, {
    name: visits,
    type: java.util.Set<org.springframework.samples.petclinic.owner.Visit>,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7b318e9b, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@2e053e25, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=14, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}, {
    name: name,
    type: java.lang.String,
    isPrimitive: false,
    isInterface: true,
    object: "Mike",
    fields: [],
}, {
    name: id,
    type: java.lang.Integer,
    isPrimitive: false,
    isInterface: true,
    object: 14,
    fields: [],
}, ]

Return: {
    name: null,
    type: org.hibernate.collection.internal.PersistentSet,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [interface java.util.Set set=[], interface java.util.List tempList=null, interface org.hibernate.engine.spi.SharedSessionContractImplementor session=org.hibernate.internal.SessionImpl@7b318e9b, boolean isTempSession=false, boolean initialized=true, interface java.util.List operationQueue=null, boolean directlyAccessible=false, boolean initializing=false, class java.lang.Object owner=org.springframework.samples.petclinic.owner.Pet@2e053e25, int cachedSize=-1, class java.lang.String role=org.springframework.samples.petclinic.owner.Pet.visits, interface java.io.Serializable key=14, boolean dirty=false, boolean elementRemoved=false, interface java.io.Serializable storedSnapshot={}, class java.lang.String sessionFactoryUuid=null, boolean allowLoadOutsideTransaction=false, ],
}

}:

org.springframework.samples.petclinic.vet.Vets.getVetList:{
Args: []

Fields: [{
    name: vets,
    type: java.util.List<org.springframework.samples.petclinic.vet.Vet>,
    isPrimitive: false,
    isInterface: true,
    object: null,
    fields: [],
}, ]

Return: {
    name: null,
    type: java.util.ArrayList,
    isPrimitive: false,
    isInterface: true,
    object: [],
    fields: [class [Ljava.lang.Object; elementData=[Ljava.lang.Object;@181ca8c5, int size=0, int modCount=0, ],
}

}:
